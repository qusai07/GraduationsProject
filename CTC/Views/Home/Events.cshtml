@model IEnumerable<CTC.Models.Event.EventsCTC>
@{
    ViewData["Title"] = "Events";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/Event.css" rel="stylesheet" />

    <section class="light">
        <div class="container section-title">
            <h2>Events</h2>
            <h4>Click On Any Event To See More Information About It</h4>
        </div>
        <div class="container py-4">
            @if (Model != null && Model.Any())
            {
                foreach (var events in Model)
                {
                    var truncatedDescription = !string.IsNullOrEmpty(events.Description)
                        ? (events.Description.Length > 100 ? events.Description.Substring(0, 100) + "..." : events.Description)
                        : "No description available";

                    <article class="postcard dark blue" data-bs-toggle="modal" data-bs-target="#eventModal-@events.Id">
                        <div class="postcard__img_wrapper">
                            <img src="@(string.IsNullOrEmpty(events.ImageUrl) ? "https://placehold.co/600x400" : events.ImageUrl)"
                                 class="postcard__img" alt="Event Image" />
                        </div>
                        <div class="postcard__text">
                            <h1 class="postcard__title blue">
                                <a href="#">@(string.IsNullOrEmpty(events.Name) ? "Untitled Event" : events.Name)</a>
                            </h1>
                            <div class="postcard__subtitle small">
                                <time datetime="@events.EventDate.ToString("yyyy-MM-dd HH:mm:ss")">
                                    <i class="fas fa-calendar-alt me-2"></i>@events.EventDate.ToString("MMM dd, yyyy")
                                </time>
                            </div>
                            <div class="postcard__bar"></div>
                            <div class="postcard__preview-txt">About Event: @truncatedDescription</div>
                            <ul class="postcard__tagbox">
                                <li class="tag__item">
                                    <i class="fas fa-tag me-2"></i>
                                    @(string.IsNullOrEmpty(events.EventType) ? "Unspecified Type" : events.EventType)
                                </li>
                                <li class="tag__item">
                                    <i class="fas fa-clock me-2"></i>
                                    Duration: @events.EventDate.ToString("hh:mm tt")
                                </li>
                            </ul>
                        </div>
                    </article>

                    <div class="modal fade" id="eventModal-@events.Id" tabindex="-1"
                         aria-labelledby="eventModalLabel-@events.Id" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="eventModalLabel-@events.Id">
                                        @(string.IsNullOrEmpty(events.Name) ? "Untitled Event" : events.Name)
                                    </h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <h5>Event Description:</h5>
                                    <p>@(string.IsNullOrEmpty(events.Description) ? "No description available" : events.Description)</p>
                                    <p><strong>Event Date:</strong> @events.EventDate.ToString("MMM dd, yyyy hh:mm tt")</p>
                                    <p><strong>Location:</strong> @(string.IsNullOrEmpty(events.Location) ? "Location not specified" : events.Location)</p>
                                    <p><strong>Event Type:</strong> @(string.IsNullOrEmpty(events.EventType) ? "Type not specified" : events.EventType)</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center">
                    <h1 class="h1" id="pageHeaderTitle">All Events</h1>
                    <p>No events available at this time.</p>
                </div>
            }
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


